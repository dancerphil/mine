{"version":3,"sources":["Block.module.css","App.module.css","useWindowWidth.ts","renderer.ts","region.ts","Block.tsx","App.tsx","serviceWorker.ts","index.tsx","Theme2.module.css"],"names":["module","exports","getWindowWidth","window","outerWidth","useWindowWidth","useState","windowWidth","setWindowWidth","useEffect","updateWindowWidth","addEventListener","removeEventListener","region","createRegion","useRender","useValue","blockRegion","createMappedRegion","getBlock","x","y","getValue","getBlockList","arr","i","getXY","push","start","Math","floor","getSurroundingBlocks","block","blockList","compact","createBlock","mine","reveal","mark","label","set","resetMap","fillMap","mineCount","random","forEach","blocks","sumBy","handleMark","handleReveal","console","error","handleBlockClick","fillMapUntilValid","filter","b","handleSmart","v","Block","style","handleClick","useCallback","className","cx","styles","theme","cover","onClick","App","ref","useRef","containerStyle","width","size","blockStyle","height","handleMouseMove","e","buttons","element","current","mouseX","pageX","offsetLeft","mouseY","pageY","offsetTop","handleBlockMove","container","onMouseMove","map","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.50f1292d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Block_block__iCjDP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import {useState, useEffect} from 'react';\n\nconst getWindowWidth = () => {\n    return window.outerWidth;\n}\n\nconst useWindowWidth = () => {\n    const [windowWidth, setWindowWidth] = useState<number>(getWindowWidth);\n    useEffect(\n        () => {\n            const updateWindowWidth = () => setWindowWidth(getWindowWidth());\n            window.addEventListener('resize', updateWindowWidth);\n            return () => window.removeEventListener('resize', updateWindowWidth);\n        }\n    );\n    return windowWidth;\n}\n\nexport default useWindowWidth;\n","import {createRegion} from 'region-core';\n\nconst region = createRegion<number>(0)\n\nexport const rerender = () => region.set(v => v+1);\n\nexport const useRender = region.useValue;\n","import {sumBy, compact} from 'lodash';\nimport {createMappedRegion} from 'region-core';\nimport {rerender} from './renderer';\nimport {Block} from './types';\n\nconst blockRegion = createMappedRegion<{x: number, y: number}, Block>();\n\nconst getBlock = (x: number, y: number) => blockRegion.getValue({x, y}) as Block;\n\nexport const getBlockList = (): Block[] => {\n    const arr: Block[] = []\n    for (let i = 0; i < 1000; i++) {\n        const [x, y] = getXY(i);\n        arr.push(getBlock(x, y))\n    }\n    return arr;\n}\n\nlet start = false;\n\nconst getXY = (i: number) => {\n    return [i % 10, Math.floor(i / 10)]\n}\n\nconst getSurroundingBlocks = (block: Block) => {\n    const {x, y} = block;\n    const blockList = [\n        getBlock(x - 1, y - 1), getBlock(x - 1, y), getBlock(x - 1, y + 1),\n        getBlock(x, y - 1), getBlock(x, y + 1),\n        getBlock(x + 1, y - 1), getBlock(x + 1, y), getBlock(x + 1, y + 1),\n    ]\n    return compact(blockList);\n}\n\nconst createBlock = (i: number): Block => {\n    const [x, y] = getXY(i);\n    return {\n        x,\n        y,\n        mine: false,\n        reveal: false,\n        mark: false,\n        label: 0,\n    }\n}\n\nconst resetMap = () => {\n    for (let i = 0; i < 1000; i++) {\n        const block = createBlock(i)\n        blockRegion.set({x: block.x, y: block.y}, block);\n    }\n}\n\nresetMap();\n\nconst fillMap = () => {\n    // x, y mine = false\n    // Object.values(blockMap).forEach((block) => {\n    //     block.mine = false\n    // })\n\n    let mineCount = 0;\n    while (mineCount < 150) {\n        const i = Math.floor(Math.random() * 1000)\n        const [x, y] = getXY(i)\n        const block = blockRegion.getValue({x, y}) as Block\n        if (!block.mine) {\n            block.mine = true;\n            mineCount ++;\n        }\n    }\n\n    getBlockList().forEach((block) => {\n        const blocks = getSurroundingBlocks(block);\n        block.label = sumBy(blocks, 'mine')\n    })\n}\n\nconst fillMapUntilValid = (block: Block) => {\n    for (let i = 0; i < 100; i++) {\n        fillMap();\n        if (!block.mine && block.label === 0) {\n            return\n        }\n    }\n}\n\nconst handleMark = (block: Block) => {\n    block.mark = true;\n}\n\nconst handleReveal = (block: Block) => {\n    if (block.reveal) {\n        return;\n    }\n    block.reveal = true;\n    if (block.mine) {\n        console.error('失败')\n        getBlockList().forEach(block => {\n            block.reveal = true;\n        })\n        return;\n    }\n    const {label} = block\n    if (label === 0) {\n        // 这是一个深搜\n        getSurroundingBlocks(block).forEach(handleReveal)\n    }\n}\n\nconst handleSmart = (block: Block) => {\n    const blocks = getSurroundingBlocks(block);\n    // 如果 reveal 的 block 数量正好，则把未打开的置为 mark\n    if (sumBy(blocks, (block) => block.reveal ? 0 : 1) === block.label) {\n        blocks.filter(b => !b.reveal).forEach(handleMark);\n        return;\n    }\n    // 如果 mark 的 block 数量正好，则把未打开的置为 reveal\n    if (sumBy(blocks, (block) => block.mark ? 1 : 0) === block.label) {\n        blocks.filter(b => !b.mark).forEach(handleReveal)\n    }\n}\n\nexport const handleBlockClick = (block: Block) => {\n    if (!start){\n        fillMapUntilValid(block);\n        start = true\n    }\n    const {reveal} = block\n    if (reveal) {\n        handleSmart(block);\n    } else {\n        handleReveal(block);\n    }\n    rerender()\n}\n\nexport const handleBlockMove = (x: number, y: number) => {\n    const block = getBlock(x, y);\n    if (block) {\n        handleBlockClick(block)\n    }\n}\n","import React, {CSSProperties, useCallback} from 'react';\nimport cx from 'classnames';\nimport {Block as BlockType} from './types';\nimport styles from './Block.module.css';\nimport theme from './Theme2.module.css';\nimport {handleBlockClick} from \"./region\";\n\ninterface Props {\n    block: BlockType\n    style: CSSProperties\n}\n\nconst Block = ({block, style}: Props) => {\n    const {mine, reveal, mark, label} = block;\n    const handleClick = useCallback(\n        () => handleBlockClick(block),\n        [block]\n    )\n    if (!reveal) {\n        const className = cx(\n            styles.block,\n            theme.cover,\n            {\n                [theme.mark]: mark,\n            }\n        )\n        return (\n            <div\n                className={className}\n                style={style}\n                onClick={handleClick}\n            >\n                {mark && 'm'}\n            </div>\n        )\n    }\n    const className = cx(\n        styles.block,\n        theme.reveal,\n        {\n            [theme[`label${label}`]]: !mine,\n            [theme.mine]: mine,\n        }\n    )\n    return (\n        <div\n            className={className}\n            style={style}\n            onClick={handleClick}\n        >\n            {mine ? '!' :  label}\n        </div>\n    )\n}\n\nexport default Block;\n","import React, {useCallback, useRef} from 'react';\nimport useWindowWidth from './useWindowWidth';\nimport {getBlockList, handleBlockMove} from './region';\nimport {useRender} from './renderer';\nimport Block from './Block';\nimport {Block as BlockType} from './types';\nimport styles from './App.module.css';\n\nconst App = () => {\n  useRender()\n  const ref = useRef<HTMLDivElement>(null)\n  const windowWidth = useWindowWidth();\n  const containerStyle = {width: windowWidth < 400 ? windowWidth : 400}\n  const size = containerStyle.width / 10\n  const blockStyle = {width: size, height: size};\n\n  const handleMouseMove = useCallback(\n      (e) => {\n          if (e.buttons) {\n              const element = ref.current as HTMLDivElement;\n              const mouseX = e.pageX - element.offsetLeft\n              const mouseY = e.pageY - element.offsetTop\n              const x = Math.floor(mouseX / size)\n              const y = Math.floor(mouseY / size)\n              handleBlockMove(x, y);\n          }\n      },\n      [size]\n  )\n\n  return (\n      <div\n          className={styles.container}\n          style={containerStyle}\n          ref={ref}\n          onMouseMove={handleMouseMove}\n      >\n        {getBlockList().map((block: BlockType) => {\n          const {x, y} = block\n          return (\n              <Block key={`${x}-${y}`} block={block} style={blockStyle} />\n          )\n        })}\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Theme2_cover__3865b\",\"reveal\":\"Theme2_reveal__1EBmM\",\"mine\":\"Theme2_mine__3IuD1\",\"mark\":\"Theme2_mark__3Tzcm\",\"label0\":\"Theme2_label0__3RWIe\",\"label1\":\"Theme2_label1__2ZQ5E\",\"label2\":\"Theme2_label2__3qBuF\",\"label3\":\"Theme2_label3__2CRCO\",\"label4\":\"Theme2_label4__3JfsB\",\"label5\":\"Theme2_label5__10eKI\",\"label6\":\"Theme2_label6__1_WrO\",\"label7\":\"Theme2_label7__2QVoS\",\"label8\":\"Theme2_label8__3yYkG\"};"],"sourceRoot":""}